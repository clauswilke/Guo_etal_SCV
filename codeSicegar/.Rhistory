colVec01=c("blue", "green", "#e34a33", "#fdbb84") # <- simply change this to change figure colors
###*****************************
htmlTable(as.matrix(data.frame("File names"=listFileNames,"Conditions"=listConditionNames)),
col.rgroup = colVec01)
for (counter01 in 1:length(listFileNames) ) {
dataFileName=listFileNames[counter01];
currentDfLong=read.csv(file = paste0("../codeSicegar_results/sicegar_output_",
"currentDf_",
dataFileName,
".csv"))
currentDfLong %>%
dplyr::group_by(Cell,Mutation,MOI,dataSet) %>%
dplyr::summarize(sicegar_classification=unique(classification)) ->currentDf
linear_results=read.csv(file = paste0("../codeSicegar_results/sicegar_output_",
"linear_results_",
dataFileName,
".csv"))
sigmoidal_results=read.csv(file = paste0("../codeSicegar_results/sicegar_output_",
"sigmoidal_results_",
dataFileName,
".csv"))
doublesigmoidal_results=read.csv(file = paste0("../codeSicegar_results/sicegar_output_",
"doublesigmoidal_results_",
dataFileName,
".csv"))
load(file=paste0("../processedData/","tidy",dataFileName,"_DDOM",".RDA"))
assign(x = "DDOM",value = get(paste0(dataFileName,"TidyGrouped_DDOM")))
DDOM %>%
dplyr::mutate(dataSet=dataFileName) %>%
dplyr::mutate(DDOM=ifelse(Dirt==1|Dried_wells==1|Out_of_focus==1|Multiple_infections==1,1,0))->DDOM
dplyr::left_join(currentDf,DDOM)->currentDf
if(counter01==1)
{
currentDfList=currentDf
linear_resultsList=linear_results
sigmoidal_resultsList=sigmoidal_results
doublesigmoidal_resultsList=doublesigmoidal_results
}
if(counter01!=1)
{
currentDfList=dplyr::rbind_list(currentDfList,currentDf)
linear_resultsList=dplyr::rbind_list(linear_resultsList,linear_results)
sigmoidal_resultsList=dplyr::rbind_list(sigmoidal_resultsList,sigmoidal_results)
doublesigmoidal_resultsList=dplyr::rbind_list(doublesigmoidal_resultsList,doublesigmoidal_results)
}
remove(currentDf, linear_results, sigmoidal_results, doublesigmoidal_results, DDOM)
}
currentDfLong=read.csv(file = paste0("../codeSicegar_results/sicegar_output_",
"currentDf_",
dataFileName,
".csv"))
dir()
###*****************************
# Set Working Directory
# One needs to arrange the correct pathway if this is not umut's computer ;)
if(as.vector(Sys.info()["effective_user"]=="umut"))
{setwd(paste0("/Users/umut/GitHub/single_cell_virology/figuresRMarkDown/"))} # mac computer
###*****************************
dir()
require(ggplot2)
try(log("a"))
q<-try(log("a"))
q
q=="try-error"
knitr::opts_chunk$set(echo = TRUE)
options(width = 120)
###*****************************
# Color codes & conditions of the experiment sets used
# Test Name & Data Load & Colors
testName="Ganetespib"
listFileNames=c("SCV109","SCV110","SCV111","SCV112","SCV113") # <- simply change this to pick up correct data
listConditionNames=c("no drug", "10 nM rupintrivir", "50 µM 2'-C-meA", "2 μM Ganetespib", "50 µM 2'-C-meA+2 μM Ganetespib") # <-  They are associated labels for datasets
listOrderNames=c("no drug", "10 nM rupintrivir", "50 µM 2'-C-meA", "2 μM Ganetespib", "50 µM 2'-C-meA+2 μM Ganetespib") # <- They are the order of labels
colVec01=c("#e41a1c", "#377eb8", "#4daf4a","#984ea3", "#ff7f00") # <- simply change this to change figure colors
###*****************************
htmlTable(as.matrix(data.frame("File names"=listFileNames,"Conditions"=listConditionNames)),
col.rgroup = colVec01)
source('~/Desktop/confMatrixProbDist.R', echo=TRUE)
source('~/Desktop/confMatrixProbDist.R', echo=TRUE)
x_all[1,:]
x_all[1,]
sum(x_all[1,])
source('~/Desktop/confMatrixProbDist.R', echo=TRUE)
sum(x_all[,1])
tr(x_all)
diag(x_all)
x_all_col = colSums(x_all)
x_all_col
x_all_row = rowSums(x_all)
x_all_row
source('~/Desktop/confMatrixProbDist.R', echo=TRUE)
source('~/Desktop/confMatrixProbDist.R', echo=TRUE)
source('~/Desktop/confMatrixProbDist.R', echo=TRUE)
source('~/Desktop/confMatrixProbDist.R', echo=TRUE)
hist(f1Scores)
source('~/Desktop/confMatrixProbDist.R', echo=TRUE)
warnings()
source('~/Desktop/confMatrixProbDist.R', echo=TRUE)
TP
x_all_col
source('~/Desktop/confMatrixProbDist.R', echo=TRUE)
source('~/Desktop/confMatrixProbDist.R', echo=TRUE)
source('~/Desktop/confMatrixProbDist.R', echo=TRUE)
source('~/Desktop/confMatrixProbDist.R', echo=TRUE)
source('~/Desktop/confMatrixProbDist.R', echo=TRUE)
source('~/Desktop/confMatrixProbDist.R', echo=TRUE)
source('~/Desktop/confMatrixProbDist.R', echo=TRUE)
source('~/Desktop/confMatrixProbDist.R', echo=TRUE)
source('~/Desktop/confMatrixProbDist.R', echo=TRUE)
hist(f1Scores,100)
hist(f1Scores,1000)
hist(f1Scores,10000)
seq(from=1, to=100)
seq(from=1, to=100, by=1)
seq(from=1, to=100, by=2)
for(i=1,100){seq(from=1, to=100, by=i)}
for(iin 1, 100){seq(from=1, to=100, by=i)}
for(i in 1, 100){seq(from=1, to=100, by=i)}
for(i in 1 to 100){seq(from=1, to=100, by=i)}
for(i in 1 : 100){seq(from=1, to=100, by=i)}
for(i in 1 : 100)
{
s=seq(from=1, to=100, by=i)
if(i=1){sLong=s}
if(i!=1){sLong=c(sLong,s)}
}
s=seq(from=1, to=100, by=i)
if(i=1){sLong=s}
for(i in 1 : 100)
{
s=seq(from=1, to=100, by=i)
if(i==1){sLong=s}
if(i!=1){sLong=c(sLong,s)}
}
sLong
sort(sLong)
data.frame(sort(sLong))
q<-data.frame(listName=sort(sLong))
head(q)
q%>%dplyr::group_by(listName) %>% dplyr::summarise(n())
require(dplyr)
q%>%dplyr::group_by(listName) %>% dplyr::summarise(n())
q %> %dplyr::group_by(listName) %>% dplyr::summarise(number=n()) %>% dplyr::mutate(oddEven=number %% 2)
q %>% dplyr::group_by(listName) %>% dplyr::summarise(number=n()) %>% dplyr::mutate(oddEven=number %% 2)
for(i in 1 : 100)
{
s=seq(from=1, to=100, by=i)
if(i==1){sLong=s}
if(i!=1){sLong=c(sLong,s)}
}
q<-data.frame(listName=sort(sLong))
q %>% dplyr::group_by(listName) %>%
dplyr::summarise(number=n()) %>%
dplyr::mutate(oddEven=number %% 2) %>%
.$oddEven %>% sum(.)
q<-data.frame(listName=sort(sLong))
q %>% dplyr::group_by(listName) %>%
dplyr::summarise(number=n()) %>%
dplyr::mutate(oddEven=number %% 2)
for(i in 1 : 100)
{
s=seq(from=1, to=100, by=i)
if(i==1){sLong=s}
if(i!=1){sLong=c(sLong,s)}
}
q<-data.frame(listName=sort(sLong))
q %>% dplyr::group_by(listName) %>%
dplyr::summarise(number=n()) %>%
dplyr::mutate(oddEven=number %% 2) -> q2
q2 %>%
.$oddEven %>% sum(.)
q
q2
View(q2)
for(i in 1 : 100)
{
s=seq(from=0, to=100, by=i)
if(i==1){sLong=s}
if(i!=1){sLong=c(sLong,s)}
}
q<-data.frame(listName=sort(sLong))
q %>% dplyr::group_by(listName) %>%
dplyr::summarise(number=n()) %>%
dplyr::mutate(oddEven=number %% 2) -> q2
q2 %>%
.$oddEven %>% sum(.)
q2
seq(from=0, to=100, by=2)
for(i in 1 : 100)
{
s=seq(from=0, to=100, by=i)
if(i==1){sLong=s}
if(i!=1){sLong=c(sLong,s)}
}
q<-data.frame(listName=sort(sLong))
q %>% dplyr::group_by(listName) %>%
dplyr::summarise(number=n()) %>%
dplyr::mutate(oddEven=number %% 2) -> q2
q2
View(q2)
for(i in 1 : 100)
{
s=seq(from=0, to=100, by=i)
if(i==1){sLong=s}
if(i!=1){sLong=c(sLong,s)}
}
q<-data.frame(listName=sort(sLong))
q %>% dplyr::group_by(listName) %>%
dplyr::summarise(number=n()) %>%
dplyr::mutate(oddEven=number %% 2) -> q2
q2 %>%
.$oddEven %>% sum(.)
require("dplyr")
for(i in 1 : 100)
{
s=seq(from=0, to=100, by=i)
if(i==1){sLong=s}
if(i!=1){sLong=c(sLong,s)}
}
q<-data.frame(listName=sort(sLong))
q %>% dplyr::group_by(listName) %>%
dplyr::summarise(number=n()) %>%
dplyr::mutate(oddEven=number %% 2) -> q2
q2 %>%
.$oddEven %>% sum(.)
q2
View(q2)
1, 2, 4, 5, 10, 20, 25, 50, 100
sample(x = 10)
sample(x = 10, size = 10, replace = T)
sum(sample(x = 20, size = 20, replace = T))
for(i in 1 : 100)
{
q[i]=sum(sample(x = 20, size = 20, replace = T))
}
q
q
sum(sample(x = 20, size = 20, replace = T))
for(i in 1 : 5)
{
q[i]=sum(sample(x = 20, size = 20, replace = T))
}
q
for(i in 1 : 5)
{
q[i]=sum(sample(x = 20, size = 20, replace = T))
}
q
for(i in 1 : 5)
{
q[i,]=sum(sample(x = 20, size = 20, replace = T))
}
q
for(i in 1 : 5)
{
summon=sum(sample(x = 20, size = 20, replace = T))
q[i]=summon
}
summon
for(i in 1 : 5)
{
summon=sum(sample(x = 20, size = 20, replace = T))
q[i]=summon
}
summon
for(i in 1 : 5)
{
summon=sum(sample(x = 20, size = 20, replace = T))
q[i]=summon
}
q
aa=c()
for(i in 1 : 5)
{
summon=sum(sample(x = 20, size = 20, replace = T))
aa[i]=summon
}
aa
aa=c()
for(i in 1 : 1000)
{
summon=sum(sample(x = 20, size = 20, replace = T))
aa[i]=summon
}
hist(aa)
aa=c()
for(i in 1 : 1000)
{
summon=sum(sample(x = 20, size = 20, replace = T))
aa[i]=summon
}
hist(aa,20)
aa=c()
for(i in 1 : 10000)
{
summon=sum(sample(x = 20, size = 20, replace = T))
aa[i]=summon
}
hist(aa,50)
aa=c()
for(i in 1 : 10000)
{
summon=sum(sample(x = 20, size = 20, replace = T))
aa[i]=summon
}
m=hist(aa,50)
m
length(aa>250)
aa>250
sum(aa>250)
sum(aa>280)
sum(aa>270)
require("dplyr")
for(i in 1 : 100)
{
s=seq(from=0, to=100, by=i)
if(i==1){sLong=s}
if(i!=1){sLong=c(sLong,s)}
}
require("dplyr")
for(i in 1 : 100)
{
s=seq(from=0, to=100, by=i)
if(i==1){sLong=s}
if(i!=1){sLong=c(sLong,s)}
}
q<-data.frame(listName=sort(sLong))
q %>% dplyr::group_by(listName) %>%
dplyr::summarise(number=n()) %>%
dplyr::mutate(oddEven=number %% 2) -> q2
q2 %>%
.$oddEven %>% sum(.)
aa=c()
for(i in 1 : 10000)
{
summon=sum(sample(x = 20, size = 20, replace = T))
aa[i]=summon
}
m=hist(aa,50)
sum(aa>270)
require("dplyr")
for(i in 1 : 100)
{
s=seq(from=0, to=100, by=i)
if(i==1){sLong=s}
if(i!=1){sLong=c(sLong,s)}
}
q<-data.frame(listName=sort(sLong))
q %>% dplyr::group_by(listName) %>%
dplyr::summarise(number=n()) %>%
dplyr::mutate(oddEven=number %% 2) -> q2
q2 %>%
.$oddEven %>% sum(.)
source("https://bioconductor.org/biocLite.R")
biocLite("GRENITS")
data(Athaliana_ODE)
require(GRENITS)
data(Athaliana_ODE)
View(Athaliana_ODE)
rand(1,5)
min(Athaliana_ODE)
max(Athaliana_ODE)
runif(min = -2.5, max=2.5, n = 50*25)
matrix(data = runif(min = -2.5, max=2.5, n = 50*25),ncol = 50)
matrix(data = runif(min = -2.5, max=2.5, n = 50*25),ncol = 50)
as.data.frame(matrix(data = runif(min = -2.5, max=2.5, n = 50*25),ncol = 50))
require("dplyr2")
require("dplyr")
install.packages("dplyr")
install.packages("dplyr")
as.data.frame(matrix(data = runif(min = -2.5, max=2.5, n = 50*25),ncol = 50))
require("dplyr")
c(temp, c(1,2))
c("temp", c(1,2))
rbind("temp", c(1,2))
cbind("temp", c(1,2))
paste0("temp", c(1,2))
paste0("temp", seq(1,20))
as.data.frame(matrix(data = runif(min = -2.5, max=2.5, n = 50*25),ncol = 50))%>%colnames(.)<-paste0("temp", seq(1,20))
as.data.frame(matrix(data = runif(min = -2.5, max=2.5, n = 50*25),ncol = 50))->randomDF
colnames(randomDF)<-paste0("temp", seq(1,20))
View(randomDF)
as.data.frame(matrix(data = runif(min = -2.5, max=2.5, n = 50*25),ncol = 50))->randomDF
rownames(randomDF)<-paste0("temp", seq(1,20))
row.names(randomDF)<-paste0("temp", seq(1,20))
row.names(randomDF)
row.names(randomDF)<-paste0("temp", seq(1,25))
randomDF
View(randomDF)
require(magrittr)
Athaliana_ODE_wFake<-rbind(Athaliana_ODE, fakeDF)
source('~/Desktop/peerj Review materials/random_matrix_addition.R', echo=TRUE)
View(Athaliana_ODE_wFake)
View(Athaliana_ODE_wFake)
install.packages("tidyverse")
require(tidyverse)
source('~/Desktop/testR.R', echo=TRUE)
y <- 3
f <- function(x) {
y <- 2
browser()
y ^ 2 + g(x)
}
g <- function(x) {
browser()
x * y
}
source('~/Desktop/testR.R', echo=TRUE)
y
y
source('~/Desktop/testR.R', echo=TRUE)
y
3*6+2^2
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
u
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
formulation <- function(x,y,z)
{
u = x/(y+z) + y/(x+z) + z/(x+y)
return(u)
}
formulation
formulation(x=1, y=1, z=-1)
formulation(x=11, y=4, z=-1)
is.number(Inf)
is.numeric(Inf)
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
is.numeric(u)
source('~/Desktop/Untitled.R', echo=TRUE)
u
is.numeric(u)
is.numeric(NaN)
source('~/Desktop/Untitled.R', echo=TRUE)
x
y
z
print(c(x,y,z))
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
z
y
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
dataSet
library(datasets)
dataSet = data(iris)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
data(iris)
dataSet <- data(iris)
library(datasets)
data(iris)
summary(iris)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
View(iris)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
View(iris)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
View(iris)
colnames(iris)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
View(irisTrain)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
View(irisTrain)
irisTestSampleNo
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
iris$sampleNo
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
View(irisTest)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
install.packages("caret")
View(iris)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
View(trainCtrlList)
trainCtrlList
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
irisTest
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
View(irisTest)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
View(irisTest)
source('~/Desktop/expandMyself/RPractice/MLwithIRIS.R', echo=TRUE)
View(irisTest)
View(irisTest)
source('~/GitHub/Guo_etal_SCV/codeSicegar/generateTidyData.R', echo=TRUE)
source('~/GitHub/Guo_etal_SCV/codeSicegar/sicegarv02_app2.R', echo=TRUE)
